#!KAMAILIO

loadmodule "pv"
loadmodule "tm"
loadmodule "xlog"
loadmodule "tmx"
loadmodule "sl"
loadmodule "textops"
loadmodule "cfgutils"
loadmodule "siputils"
loadmodule "rr"
loadmodule "ctl"
loadmodule "evapi"
loadmodule "debugger"
loadmodule "jansson"

listen = udp:eth0

modparam("evapi", "workers", 4)
modparam("evapi", "bind_addr", "0.0.0.0:8228")

modparam("debugger", "mod_hash_size", 5)
modparam("debugger", "mod_level_mode", 1)
#modparam("debugger", "mod_level", "evapi=3")

disable_sctp = yes
force_rport  = yes


request_route {
	if ( is_method("ACK") ) {
		if ( t_check_trans() ) {
            t_relay();
		}
        exit;
	}

    ## Create transaction before evapi_async_relay;
    t_newtran();

    $var(evapi_data) = "{}";

    jansson_set("int", "tm.id_index", "$T(id_index)", "$var(evapi_data)");
    jansson_set("int", "tm.id_label", "$T(id_label)", "$var(evapi_data)");

    jansson_set("str", "event", "get_caller_id", "$var(evapi_data)");
    jansson_set("str", "data.fU", "$fU", "$var(evapi_data)");

    xinfo("$TV(Sn) Sending evapi_async_relay($var(evapi_data))\n");
    evapi_async_relay("$var(evapi_data)");
}


event_route[evapi:connection-new] {
    xwarn("New connection from $evapi(srcaddr):$evapi(srcport)\n");
}


event_route[evapi:connection-closed] {
    xwarn("connection closed by $evapi(srcaddr):$evapi(srcport)\n");
}


event_route[evapi:message-received] {
    xnotice("$TV(Sn) received [$evapi(msg)] from $evapi(srcaddr):$evapi(srcport)\n");

    ## Find transaction.
    jansson_get("tm.id_index", "$evapi(msg)", "$var(t_id_index)");
    jansson_get("tm.id_label", "$evapi(msg)", "$var(t_id_label)");

    $var(evapi_msg) = $evapi(msg);

    t_continue("$var(t_id_index)", "$var(t_id_label)", "CALLER_NAME");
}


route[CALLER_NAME] {
    jansson_get("data.caller_name", "$var(evapi_msg)", "$avp(caller_name)");
    $avp(pai) = "\"$avp(caller_name)\" <$(fu{uri.saor})>";
    xinfo("PAI:  $avp(pai)\n");

    append_hf("P-Asserted-Identity: $avp(pai)\r\n");

    ## send reply:
    $ru = $ru;
    xinfo("Reply '300 Multiple Choice' and exit\n");
    send_reply("300", "Multiple Choice");
    exit;
}

